

Microchip MPLAB XC8 Assembler V2.40 build 20220703182018 
                                                                                               Tue Aug 01 16:42:16 2023

Microchip MPLAB XC8 C Compiler v2.40 (Free license) build 20220703182018 Og1 
     1                           	processor	16F887
     2                           	pagewidth 120
     3                           	opt	flic
     4                           	psect	cinit,global,class=CODE,merge=1,delta=2
     5                           	psect	bssCOMMON,global,class=COMMON,space=1,delta=1,noexec
     6                           	psect	cstackCOMMON,global,class=COMMON,space=1,delta=1,noexec
     7                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,noexec
     8                           	psect	maintext,global,class=CODE,split=1,delta=2
     9                           	psect	text1,local,class=CODE,merge=1,delta=2
    10                           	psect	text2,local,class=CODE,merge=1,delta=2
    11                           	psect	text3,local,class=CODE,merge=1,delta=2
    12                           	psect	text4,local,class=CODE,merge=1,delta=2
    13                           	psect	text5,local,class=CODE,merge=1,delta=2
    14                           	psect	text6,local,class=CODE,merge=1,delta=2
    15                           	psect	intentry,global,class=CODE,delta=2
    16                           	psect	text7,local,class=CODE,merge=1,delta=2
    17                           	psect	text8,local,class=CODE,merge=1,delta=2
    18                           	psect	text9,local,class=CODE,merge=1,delta=2
    19                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=2,noexec
    20                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=2,noexec
    21                           	dabs	1,0x7E,2
    22     0000                     
    23                           ; Version 2.40
    24                           ; Generated 17/11/2021 GMT
    25                           ; 
    26                           ; Copyright Â© 2021, Microchip Technology Inc. and its subsidiaries ("Microchip")
    27                           ; All rights reserved.
    28                           ; 
    29                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    30                           ; 
    31                           ; Redistribution and use in source and binary forms, with or without modification, are
    32                           ; permitted provided that the following conditions are met:
    33                           ; 
    34                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    35                           ;        conditions and the following disclaimer.
    36                           ; 
    37                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    38                           ;        of conditions and the following disclaimer in the documentation and/or other
    39                           ;        materials provided with the distribution. Publication is not required when
    40                           ;        this file is used in an embedded application.
    41                           ; 
    42                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    43                           ;        software without specific prior written permission.
    44                           ; 
    45                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    46                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    47                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    48                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    49                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    50                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    51                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    52                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    53                           ; 
    54                           ; 
    55                           ; Code-generator required, PIC16F887 Definitions
    56                           ; 
    57                           ; SFR Addresses
    58     0000                     	;# 
    59     0001                     	;# 
    60     0002                     	;# 
    61     0003                     	;# 
    62     0004                     	;# 
    63     0005                     	;# 
    64     0006                     	;# 
    65     0007                     	;# 
    66     0008                     	;# 
    67     0009                     	;# 
    68     000A                     	;# 
    69     000B                     	;# 
    70     000C                     	;# 
    71     000D                     	;# 
    72     000E                     	;# 
    73     000E                     	;# 
    74     000F                     	;# 
    75     0010                     	;# 
    76     0011                     	;# 
    77     0012                     	;# 
    78     0013                     	;# 
    79     0014                     	;# 
    80     0015                     	;# 
    81     0015                     	;# 
    82     0016                     	;# 
    83     0017                     	;# 
    84     0018                     	;# 
    85     0019                     	;# 
    86     001A                     	;# 
    87     001B                     	;# 
    88     001B                     	;# 
    89     001C                     	;# 
    90     001D                     	;# 
    91     001E                     	;# 
    92     001F                     	;# 
    93     0081                     	;# 
    94     0085                     	;# 
    95     0086                     	;# 
    96     0087                     	;# 
    97     0088                     	;# 
    98     0089                     	;# 
    99     008C                     	;# 
   100     008D                     	;# 
   101     008E                     	;# 
   102     008F                     	;# 
   103     0090                     	;# 
   104     0091                     	;# 
   105     0092                     	;# 
   106     0093                     	;# 
   107     0093                     	;# 
   108     0093                     	;# 
   109     0094                     	;# 
   110     0095                     	;# 
   111     0096                     	;# 
   112     0097                     	;# 
   113     0098                     	;# 
   114     0099                     	;# 
   115     009A                     	;# 
   116     009B                     	;# 
   117     009C                     	;# 
   118     009D                     	;# 
   119     009E                     	;# 
   120     009F                     	;# 
   121     0105                     	;# 
   122     0107                     	;# 
   123     0108                     	;# 
   124     0109                     	;# 
   125     010C                     	;# 
   126     010C                     	;# 
   127     010D                     	;# 
   128     010E                     	;# 
   129     010F                     	;# 
   130     0185                     	;# 
   131     0187                     	;# 
   132     0188                     	;# 
   133     0189                     	;# 
   134     018C                     	;# 
   135     018D                     	;# 
   136     0000                     	;# 
   137     0001                     	;# 
   138     0002                     	;# 
   139     0003                     	;# 
   140     0004                     	;# 
   141     0005                     	;# 
   142     0006                     	;# 
   143     0007                     	;# 
   144     0008                     	;# 
   145     0009                     	;# 
   146     000A                     	;# 
   147     000B                     	;# 
   148     000C                     	;# 
   149     000D                     	;# 
   150     000E                     	;# 
   151     000E                     	;# 
   152     000F                     	;# 
   153     0010                     	;# 
   154     0011                     	;# 
   155     0012                     	;# 
   156     0013                     	;# 
   157     0014                     	;# 
   158     0015                     	;# 
   159     0015                     	;# 
   160     0016                     	;# 
   161     0017                     	;# 
   162     0018                     	;# 
   163     0019                     	;# 
   164     001A                     	;# 
   165     001B                     	;# 
   166     001B                     	;# 
   167     001C                     	;# 
   168     001D                     	;# 
   169     001E                     	;# 
   170     001F                     	;# 
   171     0081                     	;# 
   172     0085                     	;# 
   173     0086                     	;# 
   174     0087                     	;# 
   175     0088                     	;# 
   176     0089                     	;# 
   177     008C                     	;# 
   178     008D                     	;# 
   179     008E                     	;# 
   180     008F                     	;# 
   181     0090                     	;# 
   182     0091                     	;# 
   183     0092                     	;# 
   184     0093                     	;# 
   185     0093                     	;# 
   186     0093                     	;# 
   187     0094                     	;# 
   188     0095                     	;# 
   189     0096                     	;# 
   190     0097                     	;# 
   191     0098                     	;# 
   192     0099                     	;# 
   193     009A                     	;# 
   194     009B                     	;# 
   195     009C                     	;# 
   196     009D                     	;# 
   197     009E                     	;# 
   198     009F                     	;# 
   199     0105                     	;# 
   200     0107                     	;# 
   201     0108                     	;# 
   202     0109                     	;# 
   203     010C                     	;# 
   204     010C                     	;# 
   205     010D                     	;# 
   206     010E                     	;# 
   207     010F                     	;# 
   208     0185                     	;# 
   209     0187                     	;# 
   210     0188                     	;# 
   211     0189                     	;# 
   212     018C                     	;# 
   213     018D                     	;# 
   214     0000                     	;# 
   215     0001                     	;# 
   216     0002                     	;# 
   217     0003                     	;# 
   218     0004                     	;# 
   219     0005                     	;# 
   220     0006                     	;# 
   221     0007                     	;# 
   222     0008                     	;# 
   223     0009                     	;# 
   224     000A                     	;# 
   225     000B                     	;# 
   226     000C                     	;# 
   227     000D                     	;# 
   228     000E                     	;# 
   229     000E                     	;# 
   230     000F                     	;# 
   231     0010                     	;# 
   232     0011                     	;# 
   233     0012                     	;# 
   234     0013                     	;# 
   235     0014                     	;# 
   236     0015                     	;# 
   237     0015                     	;# 
   238     0016                     	;# 
   239     0017                     	;# 
   240     0018                     	;# 
   241     0019                     	;# 
   242     001A                     	;# 
   243     001B                     	;# 
   244     001B                     	;# 
   245     001C                     	;# 
   246     001D                     	;# 
   247     001E                     	;# 
   248     001F                     	;# 
   249     0081                     	;# 
   250     0085                     	;# 
   251     0086                     	;# 
   252     0087                     	;# 
   253     0088                     	;# 
   254     0089                     	;# 
   255     008C                     	;# 
   256     008D                     	;# 
   257     008E                     	;# 
   258     008F                     	;# 
   259     0090                     	;# 
   260     0091                     	;# 
   261     0092                     	;# 
   262     0093                     	;# 
   263     0093                     	;# 
   264     0093                     	;# 
   265     0094                     	;# 
   266     0095                     	;# 
   267     0096                     	;# 
   268     0097                     	;# 
   269     0098                     	;# 
   270     0099                     	;# 
   271     009A                     	;# 
   272     009B                     	;# 
   273     009C                     	;# 
   274     009D                     	;# 
   275     009E                     	;# 
   276     009F                     	;# 
   277     0105                     	;# 
   278     0107                     	;# 
   279     0108                     	;# 
   280     0109                     	;# 
   281     010C                     	;# 
   282     010C                     	;# 
   283     010D                     	;# 
   284     010E                     	;# 
   285     010F                     	;# 
   286     0185                     	;# 
   287     0187                     	;# 
   288     0188                     	;# 
   289     0189                     	;# 
   290     018C                     	;# 
   291     018D                     	;# 
   292     0000                     	;# 
   293     0001                     	;# 
   294     0002                     	;# 
   295     0003                     	;# 
   296     0004                     	;# 
   297     0005                     	;# 
   298     0006                     	;# 
   299     0007                     	;# 
   300     0008                     	;# 
   301     0009                     	;# 
   302     000A                     	;# 
   303     000B                     	;# 
   304     000C                     	;# 
   305     000D                     	;# 
   306     000E                     	;# 
   307     000E                     	;# 
   308     000F                     	;# 
   309     0010                     	;# 
   310     0011                     	;# 
   311     0012                     	;# 
   312     0013                     	;# 
   313     0014                     	;# 
   314     0015                     	;# 
   315     0015                     	;# 
   316     0016                     	;# 
   317     0017                     	;# 
   318     0018                     	;# 
   319     0019                     	;# 
   320     001A                     	;# 
   321     001B                     	;# 
   322     001B                     	;# 
   323     001C                     	;# 
   324     001D                     	;# 
   325     001E                     	;# 
   326     001F                     	;# 
   327     0081                     	;# 
   328     0085                     	;# 
   329     0086                     	;# 
   330     0087                     	;# 
   331     0088                     	;# 
   332     0089                     	;# 
   333     008C                     	;# 
   334     008D                     	;# 
   335     008E                     	;# 
   336     008F                     	;# 
   337     0090                     	;# 
   338     0091                     	;# 
   339     0092                     	;# 
   340     0093                     	;# 
   341     0093                     	;# 
   342     0093                     	;# 
   343     0094                     	;# 
   344     0095                     	;# 
   345     0096                     	;# 
   346     0097                     	;# 
   347     0098                     	;# 
   348     0099                     	;# 
   349     009A                     	;# 
   350     009B                     	;# 
   351     009C                     	;# 
   352     009D                     	;# 
   353     009E                     	;# 
   354     009F                     	;# 
   355     0105                     	;# 
   356     0107                     	;# 
   357     0108                     	;# 
   358     0109                     	;# 
   359     010C                     	;# 
   360     010C                     	;# 
   361     010D                     	;# 
   362     010E                     	;# 
   363     010F                     	;# 
   364     0185                     	;# 
   365     0187                     	;# 
   366     0188                     	;# 
   367     0189                     	;# 
   368     018C                     	;# 
   369     018D                     	;# 
   370     0000                     	;# 
   371     0001                     	;# 
   372     0002                     	;# 
   373     0003                     	;# 
   374     0004                     	;# 
   375     0005                     	;# 
   376     0006                     	;# 
   377     0007                     	;# 
   378     0008                     	;# 
   379     0009                     	;# 
   380     000A                     	;# 
   381     000B                     	;# 
   382     000C                     	;# 
   383     000D                     	;# 
   384     000E                     	;# 
   385     000E                     	;# 
   386     000F                     	;# 
   387     0010                     	;# 
   388     0011                     	;# 
   389     0012                     	;# 
   390     0013                     	;# 
   391     0014                     	;# 
   392     0015                     	;# 
   393     0015                     	;# 
   394     0016                     	;# 
   395     0017                     	;# 
   396     0018                     	;# 
   397     0019                     	;# 
   398     001A                     	;# 
   399     001B                     	;# 
   400     001B                     	;# 
   401     001C                     	;# 
   402     001D                     	;# 
   403     001E                     	;# 
   404     001F                     	;# 
   405     0081                     	;# 
   406     0085                     	;# 
   407     0086                     	;# 
   408     0087                     	;# 
   409     0088                     	;# 
   410     0089                     	;# 
   411     008C                     	;# 
   412     008D                     	;# 
   413     008E                     	;# 
   414     008F                     	;# 
   415     0090                     	;# 
   416     0091                     	;# 
   417     0092                     	;# 
   418     0093                     	;# 
   419     0093                     	;# 
   420     0093                     	;# 
   421     0094                     	;# 
   422     0095                     	;# 
   423     0096                     	;# 
   424     0097                     	;# 
   425     0098                     	;# 
   426     0099                     	;# 
   427     009A                     	;# 
   428     009B                     	;# 
   429     009C                     	;# 
   430     009D                     	;# 
   431     009E                     	;# 
   432     009F                     	;# 
   433     0105                     	;# 
   434     0107                     	;# 
   435     0108                     	;# 
   436     0109                     	;# 
   437     010C                     	;# 
   438     010C                     	;# 
   439     010D                     	;# 
   440     010E                     	;# 
   441     010F                     	;# 
   442     0185                     	;# 
   443     0187                     	;# 
   444     0188                     	;# 
   445     0189                     	;# 
   446     018C                     	;# 
   447     018D                     	;# 
   448     0009                     _PORTE	set	9
   449     0007                     _PORTC	set	7
   450     0006                     _PORTB	set	6
   451     0005                     _PORTA	set	5
   452     0006                     _PORTBbits	set	6
   453     001E                     _ADRESH	set	30
   454     0008                     _PORTD	set	8
   455     001F                     _ADCON0bits	set	31
   456     000B                     _INTCONbits	set	11
   457     000C                     _PIR1bits	set	12
   458     0013                     _SSPBUF	set	19
   459     0014                     _SSPCON	set	20
   460     005B                     _RBIE	set	91
   461     0063                     _SSPIF	set	99
   462     0066                     _ADIF	set	102
   463     0096                     _IOCBbits	set	150
   464     0095                     _WPUBbits	set	149
   465     0086                     _TRISBbits	set	134
   466     0081                     _OPTION_REGbits	set	129
   467     0089                     _TRISE	set	137
   468     0088                     _TRISD	set	136
   469     0087                     _TRISC	set	135
   470     0086                     _TRISB	set	134
   471     0085                     _TRISA	set	133
   472     008F                     _OSCCONbits	set	143
   473     009F                     _ADCON1bits	set	159
   474     0089                     _TRISEbits	set	137
   475     0085                     _TRISAbits	set	133
   476     008C                     _PIE1bits	set	140
   477     0094                     _SSPSTATbits	set	148
   478     0094                     _SSPSTAT	set	148
   479     043B                     _TRISC3	set	1083
   480     043D                     _TRISC5	set	1085
   481     0189                     _ANSELH	set	393
   482     0188                     _ANSEL	set	392
   483     0188                     _ANSELbits	set	392
   484                           
   485                           	psect	cinit
   486     000F                     start_initialization:	
   487                           ; #config settings
   488                           
   489     000F                     __initialization:
   490                           
   491                           ; Clear objects allocated to COMMON
   492     000F  01F7               	clrf	__pbssCOMMON& (0+127)
   493     0010  01F8               	clrf	(__pbssCOMMON+1)& (0+127)
   494     0011  01F9               	clrf	(__pbssCOMMON+2)& (0+127)
   495     0012                     end_of_initialization:	
   496                           ;End of C runtime variable initialization code
   497                           
   498     0012                     __end_of__initialization:
   499     0012  0183               	clrf	3
   500     0013  120A  118A  29A8   	ljmp	_main	;jump to C main() function
   501                           
   502                           	psect	bssCOMMON
   503     0077                     __pbssCOMMON:
   504     0077                     _bandera:
   505     0077                     	ds	1
   506     0078                     _contador:
   507     0078                     	ds	1
   508     0079                     _temporal:
   509     0079                     	ds	1
   510                           
   511                           	psect	cstackCOMMON
   512     0070                     __pcstackCOMMON:
   513     0070                     ?_setup:
   514     0070                     ?_ioc_init:	
   515                           ; 1 bytes @ 0x0
   516                           
   517     0070                     ?_spiReceiveWait:	
   518                           ; 1 bytes @ 0x0
   519                           
   520     0070                     ??_spiReceiveWait:	
   521                           ; 1 bytes @ 0x0
   522                           
   523     0070                     ?_spiWrite:	
   524                           ; 1 bytes @ 0x0
   525                           
   526     0070                     ??_spiWrite:	
   527                           ; 1 bytes @ 0x0
   528                           
   529     0070                     ?_spiRead:	
   530                           ; 1 bytes @ 0x0
   531                           
   532     0070                     ??_spiRead:	
   533                           ; 1 bytes @ 0x0
   534                           
   535     0070                     ?_isr:	
   536                           ; 1 bytes @ 0x0
   537                           
   538     0070                     ?_main:	
   539                           ; 1 bytes @ 0x0
   540                           
   541     0070                     ?_adc_read:	
   542                           ; 1 bytes @ 0x0
   543                           
   544     0070                     spiWrite@dat:	
   545                           ; 2 bytes @ 0x0
   546                           
   547                           
   548                           ; 1 bytes @ 0x0
   549     0070                     	ds	1
   550     0071                     ??_isr:
   551                           
   552                           ; 1 bytes @ 0x1
   553     0071                     	ds	3
   554     0074                     ??_ioc_init:
   555     0074                     ?_spiInit:	
   556                           ; 1 bytes @ 0x4
   557                           
   558     0074                     ??_adc_read:	
   559                           ; 1 bytes @ 0x4
   560                           
   561     0074                     ?_adc_init:	
   562                           ; 1 bytes @ 0x4
   563                           
   564     0074                     spiInit@sDataSample:	
   565                           ; 2 bytes @ 0x4
   566                           
   567     0074                     ioc_init@pin:	
   568                           ; 1 bytes @ 0x4
   569                           
   570     0074                     adc_init@channel:	
   571                           ; 1 bytes @ 0x4
   572                           
   573                           
   574                           ; 2 bytes @ 0x4
   575     0074                     	ds	1
   576     0075                     spiInit@sClockIdle:
   577                           
   578                           ; 1 bytes @ 0x5
   579     0075                     	ds	1
   580     0076                     spiInit@sTransmitEdge:
   581                           
   582                           ; 1 bytes @ 0x6
   583     0076                     	ds	1
   584     0077                     ??_setup:
   585     0077                     ??_spiInit:	
   586                           ; 1 bytes @ 0x7
   587                           
   588                           
   589                           	psect	cstackBANK0
   590     0020                     __pcstackBANK0:	
   591                           ; 1 bytes @ 0x7
   592                           
   593     0020                     ??_adc_init:
   594     0020                     spiInit@sType:	
   595                           ; 1 bytes @ 0x0
   596                           
   597                           
   598                           ; 1 bytes @ 0x0
   599     0020                     	ds	2
   600     0022                     ??_main:
   601                           
   602                           ; 1 bytes @ 0x2
   603     0022                     	ds	3
   604                           
   605                           	psect	maintext
   606     01A8                     __pmaintext:	
   607 ;;
   608 ;;Main: autosize = 0, tempsize = 3, incstack = 0, save=0
   609 ;;
   610 ;; *************** function _main *****************
   611 ;; Defined at:
   612 ;;		line 96 in file "main_contador.c"
   613 ;; Parameters:    Size  Location     Type
   614 ;;		None
   615 ;; Auto vars:     Size  Location     Type
   616 ;;		None
   617 ;; Return value:  Size  Location     Type
   618 ;;                  1    wreg      void 
   619 ;; Registers used:
   620 ;;		wreg, fsr0l, fsr0h, status,2, status,0, pclath, cstack
   621 ;; Tracked objects:
   622 ;;		On entry : B00/0
   623 ;;		On exit  : 0/0
   624 ;;		Unchanged: 0/0
   625 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   626 ;;      Params:         0       0       0       0       0
   627 ;;      Locals:         0       0       0       0       0
   628 ;;      Temps:          0       3       0       0       0
   629 ;;      Totals:         0       3       0       0       0
   630 ;;Total ram usage:        3 bytes
   631 ;; Hardware stack levels required when called: 5
   632 ;; This function calls:
   633 ;;		_adc_init
   634 ;;		_adc_read
   635 ;;		_setup
   636 ;; This function is called by:
   637 ;;		Startup code after reset
   638 ;; This function uses a non-reentrant model
   639 ;;
   640                           
   641     01A8                     _main:	
   642                           ;psect for function _main
   643                           
   644     01A8                     l1268:	
   645                           ;incstack = 0
   646                           ; Regs used in _main: [wreg-fsr0h+status,2+status,0+pclath+cstack]
   647                           
   648                           
   649                           ;main_contador.c: 97:     setup();
   650     01A8  120A  118A  2172  120A  118A  	fcall	_setup
   651     01AD                     l1270:
   652                           
   653                           ;main_contador.c: 98:     adc_init(0);
   654     01AD  3000               	movlw	0
   655     01AE  00F4               	movwf	adc_init@channel
   656     01AF  00F5               	movwf	adc_init@channel+1
   657     01B0  120A  118A  2016  120A  118A  	fcall	_adc_init
   658     01B5                     l1272:
   659                           
   660                           ;main_contador.c: 103:        adc_read();
   661     01B5  120A  118A  21EA  120A  118A  	fcall	_adc_read
   662     01BA                     l1274:
   663                           
   664                           ;main_contador.c: 105:        _delay((unsigned long)((250)*(8000000/4000.0)));
   665     01BA  3003               	movlw	3
   666     01BB  1283               	bcf	3,5	;RP0=0, select bank0
   667     01BC  1303               	bcf	3,6	;RP1=0, select bank0
   668     01BD  00A4               	movwf	??_main+2
   669     01BE  308A               	movlw	138
   670     01BF  00A3               	movwf	??_main+1
   671     01C0  3055               	movlw	85
   672     01C1  00A2               	movwf	??_main
   673     01C2                     u247:
   674     01C2  0BA2               	decfsz	??_main,f
   675     01C3  29C2               	goto	u247
   676     01C4  0BA3               	decfsz	??_main+1,f
   677     01C5  29C2               	goto	u247
   678     01C6  0BA4               	decfsz	??_main+2,f
   679     01C7  29C2               	goto	u247
   680     01C8  29B5               	goto	l1272
   681     01C9  120A  118A  280C   	ljmp	start
   682     01CC                     __end_of_main:
   683                           
   684                           	psect	text1
   685     0172                     __ptext1:	
   686 ;; *************** function _setup *****************
   687 ;; Defined at:
   688 ;;		line 112 in file "main_contador.c"
   689 ;; Parameters:    Size  Location     Type
   690 ;;		None
   691 ;; Auto vars:     Size  Location     Type
   692 ;;		None
   693 ;; Return value:  Size  Location     Type
   694 ;;                  1    wreg      void 
   695 ;; Registers used:
   696 ;;		wreg, status,2, status,0, pclath, cstack
   697 ;; Tracked objects:
   698 ;;		On entry : 0/0
   699 ;;		On exit  : 0/0
   700 ;;		Unchanged: 0/0
   701 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   702 ;;      Params:         0       0       0       0       0
   703 ;;      Locals:         0       0       0       0       0
   704 ;;      Temps:          0       0       0       0       0
   705 ;;      Totals:         0       0       0       0       0
   706 ;;Total ram usage:        0 bytes
   707 ;; Hardware stack levels used: 1
   708 ;; Hardware stack levels required when called: 4
   709 ;; This function calls:
   710 ;;		_ioc_init
   711 ;;		_spiInit
   712 ;; This function is called by:
   713 ;;		_main
   714 ;; This function uses a non-reentrant model
   715 ;;
   716                           
   717     0172                     _setup:	
   718                           ;psect for function _setup
   719                           
   720     0172                     l1224:	
   721                           ;incstack = 0
   722                           ; Regs used in _setup: [wreg+status,2+status,0+pclath+cstack]
   723                           
   724                           
   725                           ;main_contador.c: 115:     OSCCONbits.IRCF = 0b111;
   726     0172  3070               	movlw	112
   727     0173  1683               	bsf	3,5	;RP0=1, select bank1
   728     0174  1303               	bcf	3,6	;RP1=0, select bank1
   729     0175  048F               	iorwf	15,f	;volatile
   730     0176                     l1226:
   731                           
   732                           ;main_contador.c: 116:     OSCCONbits.SCS = 1;
   733     0176  140F               	bsf	15,0	;volatile
   734     0177                     l1228:
   735                           
   736                           ;main_contador.c: 119:     ANSELH = 0;
   737     0177  1683               	bsf	3,5	;RP0=1, select bank3
   738     0178  1703               	bsf	3,6	;RP1=1, select bank3
   739     0179  0189               	clrf	9	;volatile
   740     017A                     l1230:
   741                           
   742                           ;main_contador.c: 120:     ANSEL = 0;
   743     017A  0188               	clrf	8	;volatile
   744     017B                     l1232:
   745                           
   746                           ;main_contador.c: 123:     TRISA = 0;
   747     017B  1683               	bsf	3,5	;RP0=1, select bank1
   748     017C  1303               	bcf	3,6	;RP1=0, select bank1
   749     017D  0185               	clrf	5	;volatile
   750     017E                     l1234:
   751                           
   752                           ;main_contador.c: 124:     TRISB = 0;
   753     017E  0186               	clrf	6	;volatile
   754     017F                     l1236:
   755                           
   756                           ;main_contador.c: 125:     TRISC = 0;
   757     017F  0187               	clrf	7	;volatile
   758     0180                     l1238:
   759                           
   760                           ;main_contador.c: 126:     TRISD = 0;
   761     0180  0188               	clrf	8	;volatile
   762     0181                     l1240:
   763                           
   764                           ;main_contador.c: 127:     TRISE = 0;
   765     0181  0189               	clrf	9	;volatile
   766     0182                     l1242:
   767                           
   768                           ;main_contador.c: 129:     PORTA = 0;
   769     0182  1283               	bcf	3,5	;RP0=0, select bank0
   770     0183  1303               	bcf	3,6	;RP1=0, select bank0
   771     0184  0185               	clrf	5	;volatile
   772     0185                     l1244:
   773                           
   774                           ;main_contador.c: 130:     PORTB = 0;
   775     0185  0186               	clrf	6	;volatile
   776     0186                     l1246:
   777                           
   778                           ;main_contador.c: 131:     PORTC = 0;
   779     0186  0187               	clrf	7	;volatile
   780     0187                     l1248:
   781                           
   782                           ;main_contador.c: 132:     PORTD = 0;
   783     0187  0188               	clrf	8	;volatile
   784     0188                     l1250:
   785                           
   786                           ;main_contador.c: 133:     PORTE = 0;
   787     0188  0189               	clrf	9	;volatile
   788     0189                     l1252:
   789                           
   790                           ;main_contador.c: 135:     ioc_init(0);
   791     0189  3000               	movlw	0
   792     018A  120A  118A  20C1  120A  118A  	fcall	_ioc_init
   793     018F                     l1254:
   794                           
   795                           ;main_contador.c: 136:     ioc_init(1);
   796     018F  3001               	movlw	1
   797     0190  120A  118A  20C1  120A  118A  	fcall	_ioc_init
   798     0195                     l1256:
   799                           
   800                           ;main_contador.c: 138:     INTCONbits.GIE = 1;
   801     0195  178B               	bsf	11,7	;volatile
   802     0196                     l1258:
   803                           
   804                           ;main_contador.c: 139:     INTCONbits.PEIE = 1;
   805     0196  170B               	bsf	11,6	;volatile
   806     0197                     l1260:
   807                           
   808                           ;main_contador.c: 140:     PIR1bits.SSPIF = 0;
   809     0197  1283               	bcf	3,5	;RP0=0, select bank0
   810     0198  1303               	bcf	3,6	;RP1=0, select bank0
   811     0199  118C               	bcf	12,3	;volatile
   812     019A                     l1262:
   813                           
   814                           ;main_contador.c: 141:     PIE1bits.SSPIE = 1;
   815     019A  1683               	bsf	3,5	;RP0=1, select bank1
   816     019B  1303               	bcf	3,6	;RP1=0, select bank1
   817     019C  158C               	bsf	12,3	;volatile
   818     019D                     l1264:
   819                           
   820                           ;main_contador.c: 142:     TRISAbits.TRISA5 = 1;
   821     019D  1685               	bsf	5,5	;volatile
   822     019E                     l1266:
   823                           
   824                           ;main_contador.c: 143:     spiInit(SPI_SLAVE_SS_EN, SPI_DATA_SAMPLE_MIDDLE, SPI_CLOCK_ID
      +                          LE_LOW, SPI_IDLE_2_ACTIVE);
   825     019E  01F4               	clrf	spiInit@sDataSample
   826     019F  01F5               	clrf	spiInit@sClockIdle
   827     01A0  01F6               	clrf	spiInit@sTransmitEdge
   828     01A1  3024               	movlw	36
   829     01A2  120A  118A  21CC  120A  118A  	fcall	_spiInit
   830     01A7                     l183:
   831     01A7  0008               	return
   832     01A8                     __end_of_setup:
   833                           
   834                           	psect	text2
   835     01CC                     __ptext2:	
   836 ;; *************** function _spiInit *****************
   837 ;; Defined at:
   838 ;;		line 12 in file "SPI.c"
   839 ;; Parameters:    Size  Location     Type
   840 ;;  sType           1    wreg     enum E1292
   841 ;;  sDataSample     1    4[COMMON] enum E1300
   842 ;;  sClockIdle      1    5[COMMON] enum E1304
   843 ;;  sTransmitEdg    1    6[COMMON] enum E1308
   844 ;; Auto vars:     Size  Location     Type
   845 ;;  sType           1    0[BANK0 ] enum E1292
   846 ;; Return value:  Size  Location     Type
   847 ;;                  1    wreg      void 
   848 ;; Registers used:
   849 ;;		wreg, status,2, status,0
   850 ;; Tracked objects:
   851 ;;		On entry : 0/0
   852 ;;		On exit  : 0/0
   853 ;;		Unchanged: 0/0
   854 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   855 ;;      Params:         3       0       0       0       0
   856 ;;      Locals:         0       1       0       0       0
   857 ;;      Temps:          0       0       0       0       0
   858 ;;      Totals:         3       1       0       0       0
   859 ;;Total ram usage:        4 bytes
   860 ;; Hardware stack levels used: 1
   861 ;; Hardware stack levels required when called: 3
   862 ;; This function calls:
   863 ;;		Nothing
   864 ;; This function is called by:
   865 ;;		_setup
   866 ;; This function uses a non-reentrant model
   867 ;;
   868                           
   869     01CC                     _spiInit:	
   870                           ;psect for function _spiInit
   871                           
   872                           
   873                           ;incstack = 0
   874                           ; Regs used in _spiInit: [wreg+status,2+status,0]
   875                           ;spiInit@sType stored from wreg
   876     01CC  1283               	bcf	3,5	;RP0=0, select bank0
   877     01CD  1303               	bcf	3,6	;RP1=0, select bank0
   878     01CE  00A0               	movwf	spiInit@sType
   879     01CF                     l1172:
   880                           
   881                           ;SPI.c: 12: void spiInit(Spi_Type sType, Spi_Data_Sample sDataSample, Spi_Clock_Idle sCl
      +                          ockIdle, Spi_Transmit_Edge sTransmitEdge);SPI.c: 13: {;SPI.c: 14:     TRISC5 = 0;
   882     01CF  1683               	bsf	3,5	;RP0=1, select bank1
   883     01D0  1303               	bcf	3,6	;RP1=0, select bank1
   884     01D1  1287               	bcf	7,5	;volatile
   885                           
   886                           ;SPI.c: 15:     if(sType & 0b00000100)
   887     01D2  1283               	bcf	3,5	;RP0=0, select bank0
   888     01D3  1303               	bcf	3,6	;RP1=0, select bank0
   889     01D4  1D20               	btfss	spiInit@sType,2
   890     01D5  29D7               	goto	u231
   891     01D6  29D8               	goto	u230
   892     01D7                     u231:
   893     01D7  29DE               	goto	l1178
   894     01D8                     u230:
   895     01D8                     l1174:
   896                           
   897                           ;SPI.c: 16:     {;SPI.c: 17:         SSPSTAT = sTransmitEdge;
   898     01D8  0876               	movf	spiInit@sTransmitEdge,w
   899     01D9  1683               	bsf	3,5	;RP0=1, select bank1
   900     01DA  1303               	bcf	3,6	;RP1=0, select bank1
   901     01DB  0094               	movwf	20	;volatile
   902     01DC                     l1176:
   903                           
   904                           ;SPI.c: 18:         TRISC3 = 1;
   905     01DC  1587               	bsf	7,3	;volatile
   906                           
   907                           ;SPI.c: 19:     }
   908     01DD  29E4               	goto	l16
   909     01DE                     l1178:
   910                           
   911                           ;SPI.c: 21:     {;SPI.c: 22:         SSPSTAT = sDataSample | sTransmitEdge;
   912     01DE  0874               	movf	spiInit@sDataSample,w
   913     01DF  0476               	iorwf	spiInit@sTransmitEdge,w
   914     01E0  1683               	bsf	3,5	;RP0=1, select bank1
   915     01E1  1303               	bcf	3,6	;RP1=0, select bank1
   916     01E2  0094               	movwf	20	;volatile
   917     01E3                     l1180:
   918                           
   919                           ;SPI.c: 23:         TRISC3 = 0;
   920     01E3  1187               	bcf	7,3	;volatile
   921     01E4                     l16:	
   922                           ;SPI.c: 24:     }
   923                           
   924                           
   925                           ;SPI.c: 26:     SSPCON = sType | sClockIdle;
   926     01E4  1283               	bcf	3,5	;RP0=0, select bank0
   927     01E5  1303               	bcf	3,6	;RP1=0, select bank0
   928     01E6  0820               	movf	spiInit@sType,w
   929     01E7  0475               	iorwf	spiInit@sClockIdle,w
   930     01E8  0094               	movwf	20	;volatile
   931     01E9                     l17:
   932     01E9  0008               	return
   933     01EA                     __end_of_spiInit:
   934                           
   935                           	psect	text3
   936     00C1                     __ptext3:	
   937 ;; *************** function _ioc_init *****************
   938 ;; Defined at:
   939 ;;		line 15 in file "INTERRUPT_Library.c"
   940 ;; Parameters:    Size  Location     Type
   941 ;;  pin             1    wreg     unsigned char 
   942 ;; Auto vars:     Size  Location     Type
   943 ;;  pin             1    4[COMMON] unsigned char 
   944 ;; Return value:  Size  Location     Type
   945 ;;                  1    wreg      void 
   946 ;; Registers used:
   947 ;;		wreg, status,2, status,0
   948 ;; Tracked objects:
   949 ;;		On entry : 0/0
   950 ;;		On exit  : 0/0
   951 ;;		Unchanged: 0/0
   952 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   953 ;;      Params:         0       0       0       0       0
   954 ;;      Locals:         1       0       0       0       0
   955 ;;      Temps:          0       0       0       0       0
   956 ;;      Totals:         1       0       0       0       0
   957 ;;Total ram usage:        1 bytes
   958 ;; Hardware stack levels used: 1
   959 ;; Hardware stack levels required when called: 3
   960 ;; This function calls:
   961 ;;		Nothing
   962 ;; This function is called by:
   963 ;;		_setup
   964 ;; This function uses a non-reentrant model
   965 ;;
   966                           
   967     00C1                     _ioc_init:	
   968                           ;psect for function _ioc_init
   969                           
   970                           
   971                           ;incstack = 0
   972                           ; Regs used in _ioc_init: [wreg+status,2+status,0]
   973                           ;ioc_init@pin stored from wreg
   974     00C1  00F4               	movwf	ioc_init@pin
   975     00C2                     l818:
   976                           
   977                           ;INTERRUPT_Library.c: 17:     OPTION_REGbits.nRBPU = 0;
   978     00C2  1683               	bsf	3,5	;RP0=1, select bank1
   979     00C3  1303               	bcf	3,6	;RP1=0, select bank1
   980     00C4  1381               	bcf	1,7	;volatile
   981     00C5                     l820:
   982                           
   983                           ;INTERRUPT_Library.c: 19:     if (pin == 0){
   984     00C5  0874               	movf	ioc_init@pin,w
   985     00C6  1D03               	btfss	3,2
   986     00C7  28C9               	goto	u31
   987     00C8  28CA               	goto	u30
   988     00C9                     u31:
   989     00C9  28CE               	goto	l824
   990     00CA                     u30:
   991     00CA                     l822:
   992                           
   993                           ;INTERRUPT_Library.c: 20:         TRISBbits.TRISB0 = 1;
   994     00CA  1406               	bsf	6,0	;volatile
   995                           
   996                           ;INTERRUPT_Library.c: 21:         WPUBbits.WPUB0 = 1;
   997     00CB  1415               	bsf	21,0	;volatile
   998                           
   999                           ;INTERRUPT_Library.c: 22:         IOCBbits.IOCB0 = 1;
  1000     00CC  1416               	bsf	22,0	;volatile
  1001                           
  1002                           ;INTERRUPT_Library.c: 23:     }else if (pin == 1){
  1003     00CD  2913               	goto	l199
  1004     00CE                     l824:
  1005     00CE  0374               	decf	ioc_init@pin,w
  1006     00CF  1D03               	btfss	3,2
  1007     00D0  28D2               	goto	u41
  1008     00D1  28D3               	goto	u40
  1009     00D2                     u41:
  1010     00D2  28D7               	goto	l828
  1011     00D3                     u40:
  1012     00D3                     l826:
  1013                           
  1014                           ;INTERRUPT_Library.c: 24:         TRISBbits.TRISB1 = 1;
  1015     00D3  1486               	bsf	6,1	;volatile
  1016                           
  1017                           ;INTERRUPT_Library.c: 25:         WPUBbits.WPUB1 = 1;
  1018     00D4  1495               	bsf	21,1	;volatile
  1019                           
  1020                           ;INTERRUPT_Library.c: 26:         IOCBbits.IOCB1 = 1;
  1021     00D5  1496               	bsf	22,1	;volatile
  1022                           
  1023                           ;INTERRUPT_Library.c: 27:     }else if (pin == 2){
  1024     00D6  2913               	goto	l199
  1025     00D7                     l828:
  1026     00D7  3002               	movlw	2
  1027     00D8  0674               	xorwf	ioc_init@pin,w
  1028     00D9  1D03               	btfss	3,2
  1029     00DA  28DC               	goto	u51
  1030     00DB  28DD               	goto	u50
  1031     00DC                     u51:
  1032     00DC  28E1               	goto	l832
  1033     00DD                     u50:
  1034     00DD                     l830:
  1035                           
  1036                           ;INTERRUPT_Library.c: 28:         TRISBbits.TRISB2 = 1;
  1037     00DD  1506               	bsf	6,2	;volatile
  1038                           
  1039                           ;INTERRUPT_Library.c: 29:         WPUBbits.WPUB2 = 1;
  1040     00DE  1515               	bsf	21,2	;volatile
  1041                           
  1042                           ;INTERRUPT_Library.c: 30:         IOCBbits.IOCB2 = 1;
  1043     00DF  1516               	bsf	22,2	;volatile
  1044                           
  1045                           ;INTERRUPT_Library.c: 31:     }else if (pin == 3){
  1046     00E0  2913               	goto	l199
  1047     00E1                     l832:
  1048     00E1  3003               	movlw	3
  1049     00E2  0674               	xorwf	ioc_init@pin,w
  1050     00E3  1D03               	btfss	3,2
  1051     00E4  28E6               	goto	u61
  1052     00E5  28E7               	goto	u60
  1053     00E6                     u61:
  1054     00E6  28EB               	goto	l836
  1055     00E7                     u60:
  1056     00E7                     l834:
  1057                           
  1058                           ;INTERRUPT_Library.c: 32:         TRISBbits.TRISB3 = 1;
  1059     00E7  1586               	bsf	6,3	;volatile
  1060                           
  1061                           ;INTERRUPT_Library.c: 33:         WPUBbits.WPUB3 = 1;
  1062     00E8  1595               	bsf	21,3	;volatile
  1063                           
  1064                           ;INTERRUPT_Library.c: 34:         IOCBbits.IOCB3 = 1;
  1065     00E9  1596               	bsf	22,3	;volatile
  1066                           
  1067                           ;INTERRUPT_Library.c: 35:     }else if (pin == 4){
  1068     00EA  2913               	goto	l199
  1069     00EB                     l836:
  1070     00EB  3004               	movlw	4
  1071     00EC  0674               	xorwf	ioc_init@pin,w
  1072     00ED  1D03               	btfss	3,2
  1073     00EE  28F0               	goto	u71
  1074     00EF  28F1               	goto	u70
  1075     00F0                     u71:
  1076     00F0  28F5               	goto	l840
  1077     00F1                     u70:
  1078     00F1                     l838:
  1079                           
  1080                           ;INTERRUPT_Library.c: 36:         TRISBbits.TRISB4 = 1;
  1081     00F1  1606               	bsf	6,4	;volatile
  1082                           
  1083                           ;INTERRUPT_Library.c: 37:         WPUBbits.WPUB4 = 1;
  1084     00F2  1615               	bsf	21,4	;volatile
  1085                           
  1086                           ;INTERRUPT_Library.c: 38:         IOCBbits.IOCB4 = 1;
  1087     00F3  1616               	bsf	22,4	;volatile
  1088                           
  1089                           ;INTERRUPT_Library.c: 39:     }else if (pin == 5){
  1090     00F4  2913               	goto	l199
  1091     00F5                     l840:
  1092     00F5  3005               	movlw	5
  1093     00F6  0674               	xorwf	ioc_init@pin,w
  1094     00F7  1D03               	btfss	3,2
  1095     00F8  28FA               	goto	u81
  1096     00F9  28FB               	goto	u80
  1097     00FA                     u81:
  1098     00FA  28FF               	goto	l844
  1099     00FB                     u80:
  1100     00FB                     l842:
  1101                           
  1102                           ;INTERRUPT_Library.c: 40:         TRISBbits.TRISB5 = 1;
  1103     00FB  1686               	bsf	6,5	;volatile
  1104                           
  1105                           ;INTERRUPT_Library.c: 41:         WPUBbits.WPUB5 = 1;
  1106     00FC  1695               	bsf	21,5	;volatile
  1107                           
  1108                           ;INTERRUPT_Library.c: 42:         IOCBbits.IOCB5 = 1;
  1109     00FD  1696               	bsf	22,5	;volatile
  1110                           
  1111                           ;INTERRUPT_Library.c: 43:     }else if (pin == 6){
  1112     00FE  2913               	goto	l199
  1113     00FF                     l844:
  1114     00FF  3006               	movlw	6
  1115     0100  0674               	xorwf	ioc_init@pin,w
  1116     0101  1D03               	btfss	3,2
  1117     0102  2904               	goto	u91
  1118     0103  2905               	goto	u90
  1119     0104                     u91:
  1120     0104  2909               	goto	l848
  1121     0105                     u90:
  1122     0105                     l846:
  1123                           
  1124                           ;INTERRUPT_Library.c: 44:         TRISBbits.TRISB6 = 1;
  1125     0105  1706               	bsf	6,6	;volatile
  1126                           
  1127                           ;INTERRUPT_Library.c: 45:         WPUBbits.WPUB6 = 1;
  1128     0106  1715               	bsf	21,6	;volatile
  1129                           
  1130                           ;INTERRUPT_Library.c: 46:         IOCBbits.IOCB6 = 1;
  1131     0107  1716               	bsf	22,6	;volatile
  1132                           
  1133                           ;INTERRUPT_Library.c: 47:     }else if (pin == 7){
  1134     0108  2913               	goto	l199
  1135     0109                     l848:
  1136     0109  3007               	movlw	7
  1137     010A  0674               	xorwf	ioc_init@pin,w
  1138     010B  1D03               	btfss	3,2
  1139     010C  290E               	goto	u101
  1140     010D  290F               	goto	u100
  1141     010E                     u101:
  1142     010E  2913               	goto	l207
  1143     010F                     u100:
  1144     010F                     l850:
  1145                           
  1146                           ;INTERRUPT_Library.c: 48:         TRISBbits.TRISB7 = 1;
  1147     010F  1786               	bsf	6,7	;volatile
  1148                           
  1149                           ;INTERRUPT_Library.c: 49:         WPUBbits.WPUB7 = 1;
  1150     0110  1795               	bsf	21,7	;volatile
  1151                           
  1152                           ;INTERRUPT_Library.c: 50:         IOCBbits.IOCB7 = 1;
  1153     0111  1796               	bsf	22,7	;volatile
  1154     0112  2913               	goto	l199
  1155     0113                     l207:
  1156     0113                     l199:
  1157                           
  1158                           ;INTERRUPT_Library.c: 52:     if (RBIE == 0){
  1159     0113  198B               	btfsc	11,3	;volatile
  1160     0114  2916               	goto	u111
  1161     0115  2917               	goto	u110
  1162     0116                     u111:
  1163     0116  2919               	goto	l214
  1164     0117                     u110:
  1165     0117                     l852:
  1166                           
  1167                           ;INTERRUPT_Library.c: 53:         INTCONbits.RBIF = 0;
  1168     0117  100B               	bcf	11,0	;volatile
  1169                           
  1170                           ;INTERRUPT_Library.c: 54:         INTCONbits.RBIE = 1;
  1171     0118  158B               	bsf	11,3	;volatile
  1172     0119                     l214:
  1173     0119  0008               	return
  1174     011A                     __end_of_ioc_init:
  1175                           
  1176                           	psect	text4
  1177     01EA                     __ptext4:	
  1178 ;; *************** function _adc_read *****************
  1179 ;; Defined at:
  1180 ;;		line 78 in file "ADC_Library.c"
  1181 ;; Parameters:    Size  Location     Type
  1182 ;;		None
  1183 ;; Auto vars:     Size  Location     Type
  1184 ;;		None
  1185 ;; Return value:  Size  Location     Type
  1186 ;;                  2   72[None  ] int 
  1187 ;; Registers used:
  1188 ;;		wreg
  1189 ;; Tracked objects:
  1190 ;;		On entry : 0/0
  1191 ;;		On exit  : 0/0
  1192 ;;		Unchanged: 0/0
  1193 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1194 ;;      Params:         0       0       0       0       0
  1195 ;;      Locals:         0       0       0       0       0
  1196 ;;      Temps:          2       0       0       0       0
  1197 ;;      Totals:         2       0       0       0       0
  1198 ;;Total ram usage:        2 bytes
  1199 ;; Hardware stack levels used: 1
  1200 ;; Hardware stack levels required when called: 3
  1201 ;; This function calls:
  1202 ;;		Nothing
  1203 ;; This function is called by:
  1204 ;;		_main
  1205 ;; This function uses a non-reentrant model
  1206 ;;
  1207                           
  1208     01EA                     _adc_read:	
  1209                           ;psect for function _adc_read
  1210                           
  1211     01EA                     l904:	
  1212                           ;incstack = 0
  1213                           ; Regs used in _adc_read: [wreg]
  1214                           
  1215                           
  1216                           ;ADC_Library.c: 79:     if (ADCON0bits.GO == 0){
  1217     01EA  1283               	bcf	3,5	;RP0=0, select bank0
  1218     01EB  1303               	bcf	3,6	;RP1=0, select bank0
  1219     01EC  189F               	btfsc	31,1	;volatile
  1220     01ED  29EF               	goto	u121
  1221     01EE  29F0               	goto	u120
  1222     01EF                     u121:
  1223     01EF  29FA               	goto	l74
  1224     01F0                     u120:
  1225     01F0                     l906:
  1226                           
  1227                           ;ADC_Library.c: 80:         ADCON0bits.GO = 1;
  1228     01F0  149F               	bsf	31,1	;volatile
  1229     01F1                     l908:
  1230                           
  1231                           ;ADC_Library.c: 81:         _delay((unsigned long)((2)*(8000000/4000.0)));
  1232     01F1  3006               	movlw	6
  1233     01F2  00F5               	movwf	??_adc_read+1
  1234     01F3  3030               	movlw	48
  1235     01F4  00F4               	movwf	??_adc_read
  1236     01F5                     u257:
  1237     01F5  0BF4               	decfsz	??_adc_read,f
  1238     01F6  29F5               	goto	u257
  1239     01F7  0BF5               	decfsz	??_adc_read+1,f
  1240     01F8  29F5               	goto	u257
  1241     01F9  0000               	nop
  1242     01FA                     l74:
  1243     01FA  0008               	return
  1244     01FB                     __end_of_adc_read:
  1245                           
  1246                           	psect	text5
  1247     0016                     __ptext5:	
  1248 ;; *************** function _adc_init *****************
  1249 ;; Defined at:
  1250 ;;		line 15 in file "ADC_Library.c"
  1251 ;; Parameters:    Size  Location     Type
  1252 ;;  channel         2    4[COMMON] int 
  1253 ;; Auto vars:     Size  Location     Type
  1254 ;;		None
  1255 ;; Return value:  Size  Location     Type
  1256 ;;                  2    4[COMMON] int 
  1257 ;; Registers used:
  1258 ;;		wreg, fsr0l, fsr0h, status,2, status,0
  1259 ;; Tracked objects:
  1260 ;;		On entry : 0/0
  1261 ;;		On exit  : 0/0
  1262 ;;		Unchanged: 0/0
  1263 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1264 ;;      Params:         2       0       0       0       0
  1265 ;;      Locals:         0       0       0       0       0
  1266 ;;      Temps:          0       2       0       0       0
  1267 ;;      Totals:         2       2       0       0       0
  1268 ;;Total ram usage:        4 bytes
  1269 ;; Hardware stack levels used: 1
  1270 ;; Hardware stack levels required when called: 3
  1271 ;; This function calls:
  1272 ;;		Nothing
  1273 ;; This function is called by:
  1274 ;;		_main
  1275 ;; This function uses a non-reentrant model
  1276 ;;
  1277                           
  1278     0016                     _adc_init:	
  1279                           ;psect for function _adc_init
  1280                           
  1281     0016                     l1182:	
  1282                           ;incstack = 0
  1283                           ; Regs used in _adc_init: [wreg-fsr0h+status,2+status,0]
  1284                           
  1285                           
  1286                           ;ADC_Library.c: 17: PIR1bits.ADIF = 0;
  1287     0016  1283               	bcf	3,5	;RP0=0, select bank0
  1288     0017  1303               	bcf	3,6	;RP1=0, select bank0
  1289     0018  130C               	bcf	12,6	;volatile
  1290                           
  1291                           ;ADC_Library.c: 18: PIE1bits.ADIE = 1;
  1292     0019  1683               	bsf	3,5	;RP0=1, select bank1
  1293     001A  1303               	bcf	3,6	;RP1=0, select bank1
  1294     001B  170C               	bsf	12,6	;volatile
  1295                           
  1296                           ;ADC_Library.c: 19: INTCONbits.PEIE = 1;
  1297     001C  170B               	bsf	11,6	;volatile
  1298                           
  1299                           ;ADC_Library.c: 21: switch (channel) {
  1300     001D  2888               	goto	l1204
  1301     001E                     l60:	
  1302                           ;ADC_Library.c: 22:     case 0:
  1303                           
  1304                           
  1305                           ;ADC_Library.c: 23:         ANSELbits.ANS0 = 1;
  1306     001E  1683               	bsf	3,5	;RP0=1, select bank3
  1307     001F  1703               	bsf	3,6	;RP1=1, select bank3
  1308     0020  1408               	bsf	8,0	;volatile
  1309                           
  1310                           ;ADC_Library.c: 24:         TRISAbits.TRISA0 = 1;
  1311     0021  1683               	bsf	3,5	;RP0=1, select bank1
  1312     0022  1303               	bcf	3,6	;RP1=0, select bank1
  1313     0023  1405               	bsf	5,0	;volatile
  1314     0024                     l1184:
  1315                           
  1316                           ;ADC_Library.c: 25:         ADCON0bits.CHS = 0b0000;
  1317     0024  30C3               	movlw	-61
  1318     0025  1283               	bcf	3,5	;RP0=0, select bank0
  1319     0026  1303               	bcf	3,6	;RP1=0, select bank0
  1320     0027  059F               	andwf	31,f	;volatile
  1321                           
  1322                           ;ADC_Library.c: 26:         break;
  1323     0028  28A7               	goto	l1206
  1324     0029                     l62:	
  1325                           ;ADC_Library.c: 27:     case 1:
  1326                           
  1327                           
  1328                           ;ADC_Library.c: 28:         ANSELbits.ANS1 = 1;
  1329     0029  1683               	bsf	3,5	;RP0=1, select bank3
  1330     002A  1703               	bsf	3,6	;RP1=1, select bank3
  1331     002B  1488               	bsf	8,1	;volatile
  1332                           
  1333                           ;ADC_Library.c: 29:         TRISAbits.TRISA1 = 1;
  1334     002C  1683               	bsf	3,5	;RP0=1, select bank1
  1335     002D  1303               	bcf	3,6	;RP1=0, select bank1
  1336     002E  1485               	bsf	5,1	;volatile
  1337     002F                     l1186:
  1338                           
  1339                           ;ADC_Library.c: 30:         ADCON0bits.CHS = 0b0001;
  1340     002F  1283               	bcf	3,5	;RP0=0, select bank0
  1341     0030  1303               	bcf	3,6	;RP1=0, select bank0
  1342     0031  081F               	movf	31,w	;volatile
  1343     0032  39C3               	andlw	-61
  1344     0033  3804               	iorlw	4
  1345     0034  009F               	movwf	31	;volatile
  1346                           
  1347                           ;ADC_Library.c: 31:         break;
  1348     0035  28A7               	goto	l1206
  1349     0036                     l63:	
  1350                           ;ADC_Library.c: 32:     case 2:
  1351                           
  1352                           
  1353                           ;ADC_Library.c: 33:         ANSELbits.ANS2 = 1;
  1354     0036  1683               	bsf	3,5	;RP0=1, select bank3
  1355     0037  1703               	bsf	3,6	;RP1=1, select bank3
  1356     0038  1508               	bsf	8,2	;volatile
  1357                           
  1358                           ;ADC_Library.c: 34:         TRISAbits.TRISA2 = 1;
  1359     0039  1683               	bsf	3,5	;RP0=1, select bank1
  1360     003A  1303               	bcf	3,6	;RP1=0, select bank1
  1361     003B  1505               	bsf	5,2	;volatile
  1362     003C                     l1188:
  1363                           
  1364                           ;ADC_Library.c: 35:         ADCON0bits.CHS = 0b0010;
  1365     003C  1283               	bcf	3,5	;RP0=0, select bank0
  1366     003D  1303               	bcf	3,6	;RP1=0, select bank0
  1367     003E  081F               	movf	31,w	;volatile
  1368     003F  39C3               	andlw	-61
  1369     0040  3808               	iorlw	8
  1370     0041  009F               	movwf	31	;volatile
  1371                           
  1372                           ;ADC_Library.c: 36:         break;
  1373     0042  28A7               	goto	l1206
  1374     0043                     l64:	
  1375                           ;ADC_Library.c: 37:     case 3:
  1376                           
  1377                           
  1378                           ;ADC_Library.c: 38:         ANSELbits.ANS3 = 1;
  1379     0043  1683               	bsf	3,5	;RP0=1, select bank3
  1380     0044  1703               	bsf	3,6	;RP1=1, select bank3
  1381     0045  1588               	bsf	8,3	;volatile
  1382                           
  1383                           ;ADC_Library.c: 39:         TRISAbits.TRISA3 = 1;
  1384     0046  1683               	bsf	3,5	;RP0=1, select bank1
  1385     0047  1303               	bcf	3,6	;RP1=0, select bank1
  1386     0048  1585               	bsf	5,3	;volatile
  1387     0049                     l1190:
  1388                           
  1389                           ;ADC_Library.c: 40:         ADCON0bits.CHS = 0b0011;
  1390     0049  1283               	bcf	3,5	;RP0=0, select bank0
  1391     004A  1303               	bcf	3,6	;RP1=0, select bank0
  1392     004B  081F               	movf	31,w	;volatile
  1393     004C  39C3               	andlw	-61
  1394     004D  380C               	iorlw	12
  1395     004E  009F               	movwf	31	;volatile
  1396                           
  1397                           ;ADC_Library.c: 41:         break;
  1398     004F  28A7               	goto	l1206
  1399     0050                     l65:	
  1400                           ;ADC_Library.c: 42:     case 4:
  1401                           
  1402                           
  1403                           ;ADC_Library.c: 43:         ANSELbits.ANS4 = 1;
  1404     0050  1683               	bsf	3,5	;RP0=1, select bank3
  1405     0051  1703               	bsf	3,6	;RP1=1, select bank3
  1406     0052  1608               	bsf	8,4	;volatile
  1407                           
  1408                           ;ADC_Library.c: 44:         TRISAbits.TRISA5 = 1;
  1409     0053  1683               	bsf	3,5	;RP0=1, select bank1
  1410     0054  1303               	bcf	3,6	;RP1=0, select bank1
  1411     0055  1685               	bsf	5,5	;volatile
  1412     0056                     l1192:
  1413                           
  1414                           ;ADC_Library.c: 45:         ADCON0bits.CHS = 0b0100;
  1415     0056  1283               	bcf	3,5	;RP0=0, select bank0
  1416     0057  1303               	bcf	3,6	;RP1=0, select bank0
  1417     0058  081F               	movf	31,w	;volatile
  1418     0059  39C3               	andlw	-61
  1419     005A  3810               	iorlw	16
  1420     005B  009F               	movwf	31	;volatile
  1421                           
  1422                           ;ADC_Library.c: 46:         break;
  1423     005C  28A7               	goto	l1206
  1424     005D                     l66:	
  1425                           ;ADC_Library.c: 47:     case 5:
  1426                           
  1427                           
  1428                           ;ADC_Library.c: 48:         ANSELbits.ANS5 = 1;
  1429     005D  1683               	bsf	3,5	;RP0=1, select bank3
  1430     005E  1703               	bsf	3,6	;RP1=1, select bank3
  1431     005F  1688               	bsf	8,5	;volatile
  1432                           
  1433                           ;ADC_Library.c: 49:         TRISEbits.TRISE0 = 1;
  1434     0060  1683               	bsf	3,5	;RP0=1, select bank1
  1435     0061  1303               	bcf	3,6	;RP1=0, select bank1
  1436     0062  1409               	bsf	9,0	;volatile
  1437     0063                     l1194:
  1438                           
  1439                           ;ADC_Library.c: 50:         ADCON0bits.CHS = 0b0101;
  1440     0063  1283               	bcf	3,5	;RP0=0, select bank0
  1441     0064  1303               	bcf	3,6	;RP1=0, select bank0
  1442     0065  081F               	movf	31,w	;volatile
  1443     0066  39C3               	andlw	-61
  1444     0067  3814               	iorlw	20
  1445     0068  009F               	movwf	31	;volatile
  1446                           
  1447                           ;ADC_Library.c: 51:         break;
  1448     0069  28A7               	goto	l1206
  1449     006A                     l67:	
  1450                           ;ADC_Library.c: 52:     case 6:
  1451                           
  1452                           
  1453                           ;ADC_Library.c: 53:         ANSELbits.ANS6 = 1;
  1454     006A  1683               	bsf	3,5	;RP0=1, select bank3
  1455     006B  1703               	bsf	3,6	;RP1=1, select bank3
  1456     006C  1708               	bsf	8,6	;volatile
  1457                           
  1458                           ;ADC_Library.c: 54:         TRISEbits.TRISE1 = 1;
  1459     006D  1683               	bsf	3,5	;RP0=1, select bank1
  1460     006E  1303               	bcf	3,6	;RP1=0, select bank1
  1461     006F  1489               	bsf	9,1	;volatile
  1462     0070                     l1196:
  1463                           
  1464                           ;ADC_Library.c: 55:         ADCON0bits.CHS = 0b0110;
  1465     0070  1283               	bcf	3,5	;RP0=0, select bank0
  1466     0071  1303               	bcf	3,6	;RP1=0, select bank0
  1467     0072  081F               	movf	31,w	;volatile
  1468     0073  39C3               	andlw	-61
  1469     0074  3818               	iorlw	24
  1470     0075  009F               	movwf	31	;volatile
  1471                           
  1472                           ;ADC_Library.c: 56:         break;
  1473     0076  28A7               	goto	l1206
  1474     0077                     l68:	
  1475                           ;ADC_Library.c: 57:     case 7:
  1476                           
  1477                           
  1478                           ;ADC_Library.c: 58:         ANSELbits.ANS7 = 1;
  1479     0077  1683               	bsf	3,5	;RP0=1, select bank3
  1480     0078  1703               	bsf	3,6	;RP1=1, select bank3
  1481     0079  1788               	bsf	8,7	;volatile
  1482                           
  1483                           ;ADC_Library.c: 59:         TRISEbits.TRISE2 = 1;
  1484     007A  1683               	bsf	3,5	;RP0=1, select bank1
  1485     007B  1303               	bcf	3,6	;RP1=0, select bank1
  1486     007C  1509               	bsf	9,2	;volatile
  1487     007D                     l1198:
  1488                           
  1489                           ;ADC_Library.c: 60:         ADCON0bits.CHS = 0b0111;
  1490     007D  1283               	bcf	3,5	;RP0=0, select bank0
  1491     007E  1303               	bcf	3,6	;RP1=0, select bank0
  1492     007F  081F               	movf	31,w	;volatile
  1493     0080  39C3               	andlw	-61
  1494     0081  381C               	iorlw	28
  1495     0082  009F               	movwf	31	;volatile
  1496                           
  1497                           ;ADC_Library.c: 61:         break;
  1498     0083  28A7               	goto	l1206
  1499     0084                     l1200:
  1500                           
  1501                           ;ADC_Library.c: 63:         ANSEL = 0;
  1502     0084  1683               	bsf	3,5	;RP0=1, select bank3
  1503     0085  1703               	bsf	3,6	;RP1=1, select bank3
  1504     0086  0188               	clrf	8	;volatile
  1505                           
  1506                           ;ADC_Library.c: 65:         break;
  1507     0087  28A7               	goto	l1206
  1508     0088                     l1204:
  1509                           
  1510                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1511                           ; Switch size 1, requested type "simple"
  1512                           ; Number of cases is 1, Range of values is 0 to 0
  1513                           ; switch strategies available:
  1514                           ; Name         Instructions Cycles
  1515                           ; simple_byte            4     3 (average)
  1516                           ; direct_byte           11     8 (fixed)
  1517                           ; jumptable            260     6 (fixed)
  1518                           ;	Chosen strategy is simple_byte
  1519     0088  0875               	movf	adc_init@channel+1,w
  1520     0089  3A00               	xorlw	0	; case 0
  1521     008A  1903               	skipnz
  1522     008B  288D               	goto	l1296
  1523     008C  2884               	goto	l1200
  1524     008D                     l1296:
  1525                           
  1526                           ; Switch size 1, requested type "simple"
  1527                           ; Number of cases is 8, Range of values is 0 to 7
  1528                           ; switch strategies available:
  1529                           ; Name         Instructions Cycles
  1530                           ; simple_byte           25    13 (average)
  1531                           ; direct_byte           32     8 (fixed)
  1532                           ; jumptable            260     6 (fixed)
  1533                           ;	Chosen strategy is simple_byte
  1534     008D  0874               	movf	adc_init@channel,w
  1535     008E  3A00               	xorlw	0	; case 0
  1536     008F  1903               	skipnz
  1537     0090  281E               	goto	l60
  1538     0091  3A01               	xorlw	1	; case 1
  1539     0092  1903               	skipnz
  1540     0093  2829               	goto	l62
  1541     0094  3A03               	xorlw	3	; case 2
  1542     0095  1903               	skipnz
  1543     0096  2836               	goto	l63
  1544     0097  3A01               	xorlw	1	; case 3
  1545     0098  1903               	skipnz
  1546     0099  2843               	goto	l64
  1547     009A  3A07               	xorlw	7	; case 4
  1548     009B  1903               	skipnz
  1549     009C  2850               	goto	l65
  1550     009D  3A01               	xorlw	1	; case 5
  1551     009E  1903               	skipnz
  1552     009F  285D               	goto	l66
  1553     00A0  3A03               	xorlw	3	; case 6
  1554     00A1  1903               	skipnz
  1555     00A2  286A               	goto	l67
  1556     00A3  3A01               	xorlw	1	; case 7
  1557     00A4  1903               	skipnz
  1558     00A5  2877               	goto	l68
  1559     00A6  2884               	goto	l1200
  1560     00A7                     l1206:
  1561                           
  1562                           ;ADC_Library.c: 69:     ADCON0bits.ADCS = 0b10;
  1563     00A7  1283               	bcf	3,5	;RP0=0, select bank0
  1564     00A8  1303               	bcf	3,6	;RP1=0, select bank0
  1565     00A9  081F               	movf	31,w	;volatile
  1566     00AA  393F               	andlw	-193
  1567     00AB  3880               	iorlw	128
  1568     00AC  009F               	movwf	31	;volatile
  1569     00AD                     l1208:
  1570                           
  1571                           ;ADC_Library.c: 70:     ADCON1bits.ADFM = 0;
  1572     00AD  1683               	bsf	3,5	;RP0=1, select bank1
  1573     00AE  1303               	bcf	3,6	;RP1=0, select bank1
  1574     00AF  139F               	bcf	31,7	;volatile
  1575     00B0                     l1210:
  1576                           
  1577                           ;ADC_Library.c: 71:     ADCON1bits.VCFG0 = 0;
  1578     00B0  121F               	bcf	31,4	;volatile
  1579     00B1                     l1212:
  1580                           
  1581                           ;ADC_Library.c: 72:     ADCON1bits.VCFG1 = 0;
  1582     00B1  129F               	bcf	31,5	;volatile
  1583     00B2                     l1214:
  1584                           
  1585                           ;ADC_Library.c: 73:     ADCON0bits.ADON = 1;
  1586     00B2  1283               	bcf	3,5	;RP0=0, select bank0
  1587     00B3  1303               	bcf	3,6	;RP1=0, select bank0
  1588     00B4  141F               	bsf	31,0	;volatile
  1589     00B5                     l1216:
  1590                           
  1591                           ;ADC_Library.c: 74:     ADIF = 0;
  1592     00B5  130C               	bcf	12,6	;volatile
  1593     00B6                     l1218:
  1594                           
  1595                           ;ADC_Library.c: 75:     _delay((unsigned long)((5)*(8000000/4000.0)));
  1596     00B6  300D               	movlw	13
  1597     00B7  1283               	bcf	3,5	;RP0=0, select bank0
  1598     00B8  1303               	bcf	3,6	;RP1=0, select bank0
  1599     00B9  00A1               	movwf	??_adc_init+1
  1600     00BA  30FB               	movlw	251
  1601     00BB  00A0               	movwf	??_adc_init
  1602     00BC                     u267:
  1603     00BC  0BA0               	decfsz	??_adc_init,f
  1604     00BD  28BC               	goto	u267
  1605     00BE  0BA1               	decfsz	??_adc_init+1,f
  1606     00BF  28BC               	goto	u267
  1607     00C0                     l70:
  1608     00C0  0008               	return
  1609     00C1                     __end_of_adc_init:
  1610                           
  1611                           	psect	text6
  1612     011A                     __ptext6:	
  1613 ;; *************** function _isr *****************
  1614 ;; Defined at:
  1615 ;;		line 57 in file "main_contador.c"
  1616 ;; Parameters:    Size  Location     Type
  1617 ;;		None
  1618 ;; Auto vars:     Size  Location     Type
  1619 ;;		None
  1620 ;; Return value:  Size  Location     Type
  1621 ;;                  1    wreg      void 
  1622 ;; Registers used:
  1623 ;;		wreg, status,2, status,0, pclath, cstack
  1624 ;; Tracked objects:
  1625 ;;		On entry : 0/0
  1626 ;;		On exit  : 0/0
  1627 ;;		Unchanged: 0/0
  1628 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1629 ;;      Params:         0       0       0       0       0
  1630 ;;      Locals:         0       0       0       0       0
  1631 ;;      Temps:          3       0       0       0       0
  1632 ;;      Totals:         3       0       0       0       0
  1633 ;;Total ram usage:        3 bytes
  1634 ;; Hardware stack levels used: 1
  1635 ;; Hardware stack levels required when called: 2
  1636 ;; This function calls:
  1637 ;;		_spiRead
  1638 ;;		_spiWrite
  1639 ;; This function is called by:
  1640 ;;		Interrupt level 1
  1641 ;; This function uses a non-reentrant model
  1642 ;;
  1643                           
  1644     011A                     _isr:	
  1645                           ;psect for function _isr
  1646                           
  1647     011A                     i1l992:
  1648                           
  1649                           ;main_contador.c: 58:     if (PIR1bits.ADIF){
  1650     011A  1283               	bcf	3,5	;RP0=0, select bank0
  1651     011B  1303               	bcf	3,6	;RP1=0, select bank0
  1652     011C  1F0C               	btfss	12,6	;volatile
  1653     011D  291F               	goto	u13_21
  1654     011E  2920               	goto	u13_20
  1655     011F                     u13_21:
  1656     011F  2923               	goto	i1l998
  1657     0120                     u13_20:
  1658     0120                     i1l994:
  1659                           
  1660                           ;main_contador.c: 59:         PORTD = ADRESH;
  1661     0120  081E               	movf	30,w	;volatile
  1662     0121  0088               	movwf	8	;volatile
  1663     0122                     i1l996:
  1664                           
  1665                           ;main_contador.c: 60:         PIR1bits.ADIF = 0;
  1666     0122  130C               	bcf	12,6	;volatile
  1667     0123                     i1l998:
  1668                           
  1669                           ;main_contador.c: 63:     if (INTCONbits.RBIF){
  1670     0123  1C0B               	btfss	11,0	;volatile
  1671     0124  2926               	goto	u14_21
  1672     0125  2927               	goto	u14_20
  1673     0126                     u14_21:
  1674     0126  293E               	goto	i1l159
  1675     0127                     u14_20:
  1676     0127                     i1l1000:
  1677                           
  1678                           ;main_contador.c: 64:         if (PORTBbits.RB0 == 0) {
  1679     0127  1806               	btfsc	6,0	;volatile
  1680     0128  292A               	goto	u15_21
  1681     0129  292B               	goto	u15_20
  1682     012A                     u15_21:
  1683     012A  2933               	goto	i1l160
  1684     012B                     u15_20:
  1685     012B                     i1l1002:
  1686                           
  1687                           ;main_contador.c: 65:             contador ++;
  1688     012B  3001               	movlw	1
  1689     012C  00F1               	movwf	??_isr
  1690     012D  0871               	movf	??_isr,w
  1691     012E  07F8               	addwf	_contador,f
  1692     012F                     i1l161:	
  1693                           ;main_contador.c: 68:             }
  1694                           
  1695                           
  1696                           ;main_contador.c: 66:             while (PORTBbits.RB0 == 0) {
  1697     012F  1C06               	btfss	6,0	;volatile
  1698     0130  2932               	goto	u16_21
  1699     0131  2933               	goto	u16_20
  1700     0132                     u16_21:
  1701     0132  292F               	goto	i1l161
  1702     0133                     u16_20:
  1703     0133                     i1l160:	
  1704                           ;main_contador.c: 69:         }if (PORTBbits.RB1 == 0) {
  1705                           
  1706     0133  1886               	btfsc	6,1	;volatile
  1707     0134  2936               	goto	u17_21
  1708     0135  2937               	goto	u17_20
  1709     0136                     u17_21:
  1710     0136  293D               	goto	i1l164
  1711     0137                     u17_20:
  1712     0137                     i1l1004:
  1713                           
  1714                           ;main_contador.c: 70:             contador --;
  1715     0137  3001               	movlw	1
  1716     0138  02F8               	subwf	_contador,f
  1717     0139                     i1l165:	
  1718                           ;main_contador.c: 73:             }
  1719                           
  1720                           
  1721                           ;main_contador.c: 71:             while (PORTBbits.RB1 == 0) {
  1722     0139  1C86               	btfss	6,1	;volatile
  1723     013A  293C               	goto	u18_21
  1724     013B  293D               	goto	u18_20
  1725     013C                     u18_21:
  1726     013C  2939               	goto	i1l165
  1727     013D                     u18_20:
  1728     013D                     i1l164:	
  1729                           ;main_contador.c: 74:         }
  1730                           
  1731                           
  1732                           ;main_contador.c: 75:         INTCONbits.RBIF = 0;
  1733     013D  100B               	bcf	11,0	;volatile
  1734     013E                     i1l159:	
  1735                           ;main_contador.c: 77:     }
  1736                           
  1737                           
  1738                           ;main_contador.c: 80:    if(SSPIF == 1){
  1739     013E  1D8C               	btfss	12,3	;volatile
  1740     013F  2941               	goto	u19_21
  1741     0140  2942               	goto	u19_20
  1742     0141                     u19_21:
  1743     0141  296B               	goto	i1l172
  1744     0142                     u19_20:
  1745     0142                     i1l1006:
  1746                           
  1747                           ;main_contador.c: 81:        if (bandera == 0){
  1748     0142  0877               	movf	_bandera,w
  1749     0143  1D03               	btfss	3,2
  1750     0144  2946               	goto	u20_21
  1751     0145  2947               	goto	u20_20
  1752     0146                     u20_21:
  1753     0146  2957               	goto	i1l1012
  1754     0147                     u20_20:
  1755     0147                     i1l1008:
  1756                           
  1757                           ;main_contador.c: 82:             spiRead();
  1758     0147  120A  118A  21FB  120A  118A  	fcall	_spiRead
  1759                           
  1760                           ;main_contador.c: 83:             spiWrite(ADRESH);
  1761     014C  1283               	bcf	3,5	;RP0=0, select bank0
  1762     014D  1303               	bcf	3,6	;RP1=0, select bank0
  1763     014E  081E               	movf	30,w	;volatile
  1764     014F  120A  118A  220B  120A  118A  	fcall	_spiWrite
  1765     0154                     i1l1010:
  1766                           
  1767                           ;main_contador.c: 84:             bandera = 1;
  1768     0154  01F7               	clrf	_bandera
  1769     0155  0AF7               	incf	_bandera,f
  1770                           
  1771                           ;main_contador.c: 85:        }else if (bandera == 1){
  1772     0156  2968               	goto	i1l1018
  1773     0157                     i1l1012:
  1774     0157  0377               	decf	_bandera,w
  1775     0158  1D03               	btfss	3,2
  1776     0159  295B               	goto	u21_21
  1777     015A  295C               	goto	u21_20
  1778     015B                     u21_21:
  1779     015B  2968               	goto	i1l1018
  1780     015C                     u21_20:
  1781     015C                     i1l1014:
  1782                           
  1783                           ;main_contador.c: 86:             spiRead();
  1784     015C  120A  118A  21FB  120A  118A  	fcall	_spiRead
  1785                           
  1786                           ;main_contador.c: 87:             spiWrite(contador);
  1787     0161  0878               	movf	_contador,w
  1788     0162  120A  118A  220B  120A  118A  	fcall	_spiWrite
  1789     0167                     i1l1016:
  1790                           
  1791                           ;main_contador.c: 88:             bandera = 0;
  1792     0167  01F7               	clrf	_bandera
  1793     0168                     i1l1018:
  1794                           
  1795                           ;main_contador.c: 90:        SSPIF = 0;
  1796     0168  1283               	bcf	3,5	;RP0=0, select bank0
  1797     0169  1303               	bcf	3,6	;RP1=0, select bank0
  1798     016A  118C               	bcf	12,3	;volatile
  1799     016B                     i1l172:
  1800     016B  0873               	movf	??_isr+2,w
  1801     016C  008A               	movwf	10
  1802     016D  0E72               	swapf	??_isr+1,w
  1803     016E  0083               	movwf	3
  1804     016F  0EFE               	swapf	btemp,f
  1805     0170  0E7E               	swapf	btemp,w
  1806     0171  0009               	retfie
  1807     0172                     __end_of_isr:
  1808                           
  1809                           	psect	intentry
  1810     0004                     __pintentry:	
  1811                           ;incstack = 0
  1812                           ; Regs used in _isr: [wreg+status,2+status,0+pclath+cstack]
  1813                           
  1814     0004                     interrupt_function:
  1815     007E                     saved_w	set	btemp
  1816     0004  00FE               	movwf	btemp
  1817     0005  0E03               	swapf	3,w
  1818     0006  00F2               	movwf	??_isr+1
  1819     0007  080A               	movf	10,w
  1820     0008  00F3               	movwf	??_isr+2
  1821     0009  120A  118A  291A   	ljmp	_isr
  1822                           
  1823                           	psect	text7
  1824     020B                     __ptext7:	
  1825 ;; *************** function _spiWrite *****************
  1826 ;; Defined at:
  1827 ;;		line 34 in file "SPI.c"
  1828 ;; Parameters:    Size  Location     Type
  1829 ;;  dat             1    wreg     unsigned char 
  1830 ;; Auto vars:     Size  Location     Type
  1831 ;;  dat             1    0[COMMON] unsigned char 
  1832 ;; Return value:  Size  Location     Type
  1833 ;;                  1    wreg      void 
  1834 ;; Registers used:
  1835 ;;		wreg
  1836 ;; Tracked objects:
  1837 ;;		On entry : 0/0
  1838 ;;		On exit  : 0/0
  1839 ;;		Unchanged: 0/0
  1840 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1841 ;;      Params:         0       0       0       0       0
  1842 ;;      Locals:         1       0       0       0       0
  1843 ;;      Temps:          0       0       0       0       0
  1844 ;;      Totals:         1       0       0       0       0
  1845 ;;Total ram usage:        1 bytes
  1846 ;; Hardware stack levels used: 1
  1847 ;; This function calls:
  1848 ;;		Nothing
  1849 ;; This function is called by:
  1850 ;;		_isr
  1851 ;; This function uses a non-reentrant model
  1852 ;;
  1853                           
  1854     020B                     _spiWrite:	
  1855                           ;psect for function _spiWrite
  1856                           
  1857                           
  1858                           ;incstack = 0
  1859                           ; Regs used in _spiWrite: [wreg]
  1860                           ;spiWrite@dat stored from wreg
  1861     020B  00F0               	movwf	spiWrite@dat
  1862     020C                     i1l854:
  1863                           
  1864                           ;SPI.c: 34: void spiWrite(char dat);SPI.c: 35: {;SPI.c: 36:     SSPBUF = dat;
  1865     020C  0870               	movf	spiWrite@dat,w
  1866     020D  1283               	bcf	3,5	;RP0=0, select bank0
  1867     020E  1303               	bcf	3,6	;RP1=0, select bank0
  1868     020F  0093               	movwf	19	;volatile
  1869     0210                     i1l26:
  1870     0210  0008               	return
  1871     0211                     __end_of_spiWrite:
  1872                           
  1873                           	psect	text8
  1874     01FB                     __ptext8:	
  1875 ;; *************** function _spiRead *****************
  1876 ;; Defined at:
  1877 ;;		line 47 in file "SPI.c"
  1878 ;; Parameters:    Size  Location     Type
  1879 ;;		None
  1880 ;; Auto vars:     Size  Location     Type
  1881 ;;		None
  1882 ;; Return value:  Size  Location     Type
  1883 ;;                  1    wreg      unsigned char 
  1884 ;; Registers used:
  1885 ;;		wreg, status,2, status,0, pclath, cstack
  1886 ;; Tracked objects:
  1887 ;;		On entry : 0/0
  1888 ;;		On exit  : 0/0
  1889 ;;		Unchanged: 0/0
  1890 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1891 ;;      Params:         0       0       0       0       0
  1892 ;;      Locals:         0       0       0       0       0
  1893 ;;      Temps:          0       0       0       0       0
  1894 ;;      Totals:         0       0       0       0       0
  1895 ;;Total ram usage:        0 bytes
  1896 ;; Hardware stack levels used: 1
  1897 ;; Hardware stack levels required when called: 1
  1898 ;; This function calls:
  1899 ;;		_spiReceiveWait
  1900 ;; This function is called by:
  1901 ;;		_isr
  1902 ;; This function uses a non-reentrant model
  1903 ;;
  1904                           
  1905     01FB                     _spiRead:	
  1906                           ;psect for function _spiRead
  1907                           
  1908     01FB                     i1l856:	
  1909                           ;incstack = 0
  1910                           ; Regs used in _spiRead: [wreg+status,2+status,0+pclath+cstack]
  1911                           
  1912                           
  1913                           ;SPI.c: 49:     spiReceiveWait();
  1914     01FB  120A  118A  2204  120A  118A  	fcall	_spiReceiveWait
  1915     0200                     i1l858:
  1916                           
  1917                           ;SPI.c: 50:     return(SSPBUF);;	Return value of _spiRead is never used
  1918     0200  1283               	bcf	3,5	;RP0=0, select bank0
  1919     0201  1303               	bcf	3,6	;RP1=0, select bank0
  1920     0202  0813               	movf	19,w	;volatile
  1921     0203                     i1l34:
  1922     0203  0008               	return
  1923     0204                     __end_of_spiRead:
  1924                           
  1925                           	psect	text9
  1926     0204                     __ptext9:	
  1927 ;; *************** function _spiReceiveWait *****************
  1928 ;; Defined at:
  1929 ;;		line 29 in file "SPI.c"
  1930 ;; Parameters:    Size  Location     Type
  1931 ;;		None
  1932 ;; Auto vars:     Size  Location     Type
  1933 ;;		None
  1934 ;; Return value:  Size  Location     Type
  1935 ;;                  1    wreg      void 
  1936 ;; Registers used:
  1937 ;;		None
  1938 ;; Tracked objects:
  1939 ;;		On entry : 0/0
  1940 ;;		On exit  : 0/0
  1941 ;;		Unchanged: 0/0
  1942 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
  1943 ;;      Params:         0       0       0       0       0
  1944 ;;      Locals:         0       0       0       0       0
  1945 ;;      Temps:          0       0       0       0       0
  1946 ;;      Totals:         0       0       0       0       0
  1947 ;;Total ram usage:        0 bytes
  1948 ;; Hardware stack levels used: 1
  1949 ;; This function calls:
  1950 ;;		Nothing
  1951 ;; This function is called by:
  1952 ;;		_spiRead
  1953 ;; This function uses a non-reentrant model
  1954 ;;
  1955                           
  1956     0204                     _spiReceiveWait:	
  1957                           ;psect for function _spiReceiveWait
  1958                           
  1959     0204                     i1l816:	
  1960                           ;incstack = 0
  1961                           ; Regs used in _spiReceiveWait: []
  1962                           
  1963     0204                     i1l20:	
  1964                           ;SPI.c: 31:     while ( !SSPSTATbits.BF );
  1965                           
  1966     0204  1683               	bsf	3,5	;RP0=1, select bank1
  1967     0205  1303               	bcf	3,6	;RP1=0, select bank1
  1968     0206  1C14               	btfss	20,0	;volatile
  1969     0207  2A09               	goto	u2_21
  1970     0208  2A0A               	goto	u2_20
  1971     0209                     u2_21:
  1972     0209  2A04               	goto	i1l20
  1973     020A                     u2_20:
  1974     020A                     i1l23:
  1975     020A  0008               	return
  1976     020B                     __end_of_spiReceiveWait:
  1977     007E                     btemp	set	126	;btemp
  1978     007E                     wtemp0	set	126
  1979                           
  1980                           	psect	idloc
  1981                           
  1982                           ;Config register IDLOC0 @ 0x2000
  1983                           ;	unspecified, using default values
  1984     2000                     	org	8192
  1985     2000  3FFF               	dw	16383
  1986                           
  1987                           ;Config register IDLOC1 @ 0x2001
  1988                           ;	unspecified, using default values
  1989     2001                     	org	8193
  1990     2001  3FFF               	dw	16383
  1991                           
  1992                           ;Config register IDLOC2 @ 0x2002
  1993                           ;	unspecified, using default values
  1994     2002                     	org	8194
  1995     2002  3FFF               	dw	16383
  1996                           
  1997                           ;Config register IDLOC3 @ 0x2003
  1998                           ;	unspecified, using default values
  1999     2003                     	org	8195
  2000     2003  3FFF               	dw	16383
  2001                           
  2002                           	psect	config
  2003                           
  2004                           ;Config register CONFIG1 @ 0x2007
  2005                           ;	Oscillator Selection bits
  2006                           ;	FOSC = INTRC_NOCLKOUT, INTOSCIO oscillator: I/O function on RA6/OSC2/CLKOUT pin, I/O f
      +                          unction on RA7/OSC1/CLKIN
  2007                           ;	Watchdog Timer Enable bit
  2008                           ;	WDTE = OFF, WDT disabled and can be enabled by SWDTEN bit of the WDTCON register
  2009                           ;	Power-up Timer Enable bit
  2010                           ;	PWRTE = OFF, PWRT disabled
  2011                           ;	RE3/MCLR pin function select bit
  2012                           ;	MCLRE = OFF, RE3/MCLR pin function is digital input, MCLR internally tied to VDD
  2013                           ;	Code Protection bit
  2014                           ;	CP = OFF, Program memory code protection is disabled
  2015                           ;	Data Code Protection bit
  2016                           ;	CPD = OFF, Data memory code protection is disabled
  2017                           ;	Brown Out Reset Selection bits
  2018                           ;	BOREN = OFF, BOR disabled
  2019                           ;	Internal External Switchover bit
  2020                           ;	IESO = OFF, Internal/External Switchover mode is disabled
  2021                           ;	Fail-Safe Clock Monitor Enabled bit
  2022                           ;	FCMEN = OFF, Fail-Safe Clock Monitor is disabled
  2023                           ;	Low Voltage Programming Enable bit
  2024                           ;	LVP = OFF, RB3 pin has digital I/O, HV on MCLR must be used for programming
  2025                           ;	In-Circuit Debugger Mode bit
  2026                           ;	DEBUG = 0x1, unprogramme  2027     2007                     	org	8199
  2028     2007  20D4               	dw	8404
  2029                           
  2030                           ;Config register CONFIG2 @ 0x2008
  2031                           ;	Brown-out Reset Selection bit
  2032                           ;	BOR4V = BOR40V, Brown-out Reset set to 4.0V
  2033                           ;	Flash Program Memory Self Write Enable bits
  2034                           ;	WRT = OFF, Write protection off
  2035     2008                     	org	8200
  2036     2008  3FFF               	dw	16383

Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         3
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMMON           14      7      10
    BANK0            80      5       5
    BANK1            80      0       0
    BANK3            96      0       0
    BANK2            96      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMMON

    _setup->_spiInit

Critical Paths under _isr in COMMON

    _isr->_spiWrite

Critical Paths under _main in BANK0

    _main->_adc_init
    _setup->_spiInit

Critical Paths under _isr in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _isr in BANK1

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _isr in BANK3

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _isr in BANK2

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 3     3      0     697
                                              2 BANK0      3     3      0
                           _adc_init
                           _adc_read
                              _setup
 ---------------------------------------------------------------------------------
 (1) _setup                                                0     0      0     576
                           _ioc_init
                            _spiInit
 ---------------------------------------------------------------------------------
 (2) _spiInit                                              4     1      3     456
                                              4 COMMON     3     0      3
                                              0 BANK0      1     1      0
 ---------------------------------------------------------------------------------
 (2) _ioc_init                                             1     1      0     120
                                              4 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adc_read                                             2     2      0       0
                                              4 COMMON     2     2      0
 ---------------------------------------------------------------------------------
 (1) _adc_init                                             4     2      2     121
                                              4 COMMON     2     0      2
                                              0 BANK0      2     2      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 2
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (3) _isr                                                  3     3      0      15
                                              1 COMMON     3     3      0
                            _spiRead
                           _spiWrite
 ---------------------------------------------------------------------------------
 (4) _spiWrite                                             1     1      0      15
                                              0 COMMON     1     1      0
 ---------------------------------------------------------------------------------
 (4) _spiRead                                              0     0      0       0
                     _spiReceiveWait
 ---------------------------------------------------------------------------------
 (5) _spiReceiveWait                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 5
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _adc_init
   _adc_read
   _setup
     _ioc_init
     _spiInit

 _isr (ROOT)
   _spiRead
     _spiReceiveWait
   _spiWrite

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMMON            E      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMMON               E      7       A       1       71.4%
BITSFR0              0      0       0       1        0.0%
SFR0                 0      0       0       1        0.0%
BITSFR1              0      0       0       2        0.0%
SFR1                 0      0       0       2        0.0%
STACK                0      0       0       2        0.0%
ABS                  0      0       F       3        0.0%
BITBANK0            50      0       0       4        0.0%
BITSFR3              0      0       0       4        0.0%
SFR3                 0      0       0       4        0.0%
BANK0               50      5       5       5        6.2%
BITSFR2              0      0       0       5        0.0%
SFR2                 0      0       0       5        0.0%
BITBANK1            50      0       0       6        0.0%
BANK1               50      0       0       7        0.0%
BITBANK3            60      0       0       8        0.0%
BANK3               60      0       0       9        0.0%
BITBANK2            60      0       0      10        0.0%
BANK2               60      0       0      11        0.0%
DATA                 0      0       F      12        0.0%


Microchip Technology PIC Macro Assembler V2.40 build 20220703182018 
Symbol Table                                                                                   Tue Aug 01 16:42:16 2023

            _SSPSTATbits 0094                       l16 01E4                       l17 01E9  
                     l60 001E                       l70 00C0                       l62 0029  
                     l63 0036                       l64 0043                       l65 0050  
                     l66 005D                       l74 01FA                       l67 006A  
                     l68 0077                       u30 00CA                       u31 00C9  
                     u40 00D3                       u41 00D2                       u50 00DD  
                     u51 00DC                       u60 00E7                       u61 00E6  
                     u70 00F1                       u71 00F0                       u80 00FB  
                     u81 00FA                       u90 0105                       u91 0104  
                    l214 0119                      l207 0113                      l183 01A7  
                    l199 0113                      l820 00C5                      l830 00DD  
                    l822 00CA                      l904 01EA                      l840 00F5  
                    l832 00E1                      l824 00CE                      l906 01F0  
                    l850 010F                      l842 00FB                      l834 00E7  
                    l826 00D3                      l818 00C2                      l908 01F1  
                    l852 0117                      l844 00FF                      l836 00EB  
                    l828 00D7                      l846 0105                      l838 00F1  
                    l848 0109                      u100 010F                      u101 010E  
                    u110 0117                      u111 0116                      u120 01F0  
                    u121 01EF                      u230 01D8                      u231 01D7  
                    u247 01C2                      u257 01F5                      u267 00BC  
                    _isr 011A                     l1200 0084                     l1210 00B0  
                   l1212 00B1                     l1204 0088                     l1214 00B2  
                   l1206 00A7                     l1230 017A                     l1216 00B5  
                   l1208 00AD                     l1240 0181                     l1232 017B  
                   l1224 0172                     l1218 00B6                     l1250 0188  
                   l1242 0182                     l1234 017E                     l1226 0176  
                   l1180 01E3                     l1172 01CF                     l1260 0197  
                   l1252 0189                     l1244 0185                     l1236 017F  
                   l1228 0177                     l1190 0049                     l1182 0016  
                   l1174 01D8                     l1262 019A                     l1254 018F  
                   l1246 0186                     l1238 0180                     l1270 01AD  
                   l1192 0056                     l1184 0024                     l1176 01DC  
                   l1264 019D                     l1256 0195                     l1248 0187  
                   l1272 01B5                     l1194 0063                     l1186 002F  
                   l1178 01DE                     l1266 019E                     l1258 0196  
                   l1274 01BA                     l1196 0070                     l1188 003C  
                   l1268 01A8                     l1198 007D                     l1296 008D  
                   _ADIF 0066                     ?_isr 0070                     i1l20 0204  
                   i1l23 020A                     _RBIE 005B                     i1l34 0203  
                   i1l26 0210                     u2_20 020A                     u2_21 0209  
                   _main 01A8                     btemp 007E                     start 000C  
                  ??_isr 0071                    ?_main 0070                    _ANSEL 0188  
                  i1l160 0133                    i1l161 012F                    i1l172 016B  
                  i1l164 013D                    i1l165 0139                    i1l159 013E  
                  i1l816 0204                    i1l854 020C                    i1l856 01FB  
                  i1l858 0200                    i1l992 011A                    i1l994 0120  
                  i1l996 0122                    i1l998 0123                    u20_20 0147  
                  u20_21 0146                    u21_20 015C                    u13_20 0120  
                  u21_21 015B                    u13_21 011F                    u14_20 0127  
                  u14_21 0126                    u15_20 012B                    u15_21 012A  
                  u16_20 0133                    u16_21 0132                    u17_20 0137  
                  u17_21 0136                    u18_20 013D                    u18_21 013C  
                  u19_20 0142                    u19_21 0141                    _PORTA 0005  
                  _PORTB 0006                    _PORTC 0007                    _PORTD 0008  
                  _PORTE 0009                    _TRISA 0085                    _TRISB 0086  
                  _TRISC 0087                    _TRISD 0088                    _TRISE 0089  
                  _SSPIF 0063                    _setup 0172                    pclath 000A  
        __end_of_spiInit 01EA          __end_of_spiRead 0204                    status 0003  
                  wtemp0 007E              ioc_init@pin 0074          __initialization 000F  
           __end_of_main 01CC                   ??_main 0022                   _ADRESH 001E  
                 ?_setup 0070                   _ANSELH 0189         __end_of_adc_init 00C1  
       __end_of_adc_read 01FB                   i1l1000 0127                   i1l1010 0154  
                 i1l1002 012B                   i1l1012 0157                   i1l1004 0137  
                 i1l1014 015C                   i1l1006 0142                   i1l1016 0167  
                 i1l1008 0147                   i1l1018 0168                   _TRISC3 043B  
                 _TRISC5 043D                   _SSPCON 0014                   _SSPBUF 0013  
       __end_of_ioc_init 011A                   saved_w 007E         __end_of_spiWrite 0211  
              ??_spiInit 0077                ??_spiRead 0070  __end_of__initialization 0012  
         __pcstackCOMMON 0070            __end_of_setup 01A8           _OPTION_REGbits 0081  
                ??_setup 0077               __pmaintext 01A8               __pintentry 0004  
              ?_adc_init 0074                ?_adc_read 0070                  _SSPSTAT 0094  
              ?_ioc_init 0070                ?_spiWrite 0070                  _bandera 0077  
              _ANSELbits 0188               ??_adc_init 0020               ??_adc_read 0074  
                __ptext1 0172                  __ptext2 01CC                  __ptext3 00C1  
                __ptext4 01EA                  __ptext5 0016                  __ptext6 011A  
                __ptext7 020B                  __ptext8 01FB                  __ptext9 0204  
                _spiInit 01CC                  _spiRead 01FB     end_of_initialization 0012  
             ??_ioc_init 0074               ??_spiWrite 0070                _PORTBbits 0006  
              _TRISAbits 0085                _TRISBbits 0086                _TRISEbits 0089  
            spiWrite@dat 0070           _spiReceiveWait 0204      start_initialization 000F  
            __end_of_isr 0172   __end_of_spiReceiveWait 020B          adc_init@channel 0074  
            __pbssCOMMON 0077                ___latbits 0002            __pcstackBANK0 0020  
        ?_spiReceiveWait 0070                 ?_spiInit 0074                 ?_spiRead 0070  
   spiInit@sTransmitEdge 0076        interrupt_function 0004                 _IOCBbits 0096  
               _PIE1bits 008C       spiInit@sDataSample 0074                 _PIR1bits 000C  
             _ADCON0bits 001F               _ADCON1bits 009F                 _WPUBbits 0095  
               _adc_init 0016                 _adc_read 01EA                 _contador 0078  
               _ioc_init 00C1                 _temporal 0079                 _spiWrite 020B  
           spiInit@sType 0020        spiInit@sClockIdle 0075               _INTCONbits 000B  
               intlevel1 0000         ??_spiReceiveWait 0070               _OSCCONbits 008F  
